{"version":3,"sources":["./src/app/components/dashboard/survey-reports/eemployeereportdetail/eemployeereportdetail.component.html","./src/app/components/dashboard/survey-reports/generate-report/generate-report.component.html","./src/app/components/dashboard/survey-reports/reportdetail/reportdetail.component.html","./src/app/components/dashboard/survey-reports/survey-reports.component.html","./src/app/components/dashboard/survey-reports/eemployeereportdetail/eemployeereportdetail.component.css","./src/app/components/dashboard/survey-reports/eemployeereportdetail/eemployeereportdetail.component.ts","./src/app/components/dashboard/survey-reports/generate-report/generate-report.component.css","./src/app/components/dashboard/survey-reports/generate-report/generate-report.component.ts","./src/app/components/dashboard/survey-reports/reportdetail/reportdetail.component.css","./src/app/components/dashboard/survey-reports/reportdetail/reportdetail.component.ts","./src/app/components/dashboard/survey-reports/survey-reports.component.css","./src/app/components/dashboard/survey-reports/survey-reports.component.ts","./src/app/components/dashboard/survey-reports/survey-reports.module.ts"],"names":[],"mappings":"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","file":"survey-reports-survey-reports-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container-fluid\\\" *ngIf=\\\"userName\\\">\\r\\n\\r\\n    <!-- Page Heading -->\\r\\n\\r\\n    <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n        <h1 class=\\\"h2 mb-0 text-gray-800 text-uppercase text-dark\\\">{{userName}}</h1>\\r\\n        <h1 class=\\\"h2 mb-0 text-gray-800 text-uppercase text-success\\\">{{userType}}</h1>\\r\\n    </div>\\r\\n    <!-- <h4 style=\\\"text-transform: capitalize;\\\">Welcome {{Auth::user()->f_name}} {{Auth::user()->l_name}} ! {{Auth::user()->user_type}}</h4> -->\\r\\n    <!-- Content Row -->\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Emergency Messages')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-success text-uppercase mb-1\\\">Emergency Messages</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{emergency.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Earnings (Monthly) Card Example -->\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Survey Messages')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-primary text-uppercase mb-1\\\">Survey Messages</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{survey.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Earnings (Monthly) Card Example -->\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Login Surveys')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-danger text-uppercase mb-1\\\">Submitted Login</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{submitLogin.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Other Surveys')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-warning text-uppercase mb-1\\\">Submitted Other</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{submitOther.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"tableRecords\\\">\\r\\n        <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n            <div class=\\\"card shadow mb-4\\\">\\r\\n                <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\">{{tableTitle}}</h6>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"tableTitle == 'Login Surveys' || tableTitle == 'Other Surveys'\\\">\\r\\n                    <table class=\\\"table table-bordered text-center\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Created At</th>\\r\\n                                <th>Survey Name</th>\\r\\n                                <th>Submission Date</th>\\r\\n                                <th>Status</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of tableRecords; let j=index\\\">\\r\\n                                <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                <td>\\r\\n                                    <a *ngIf=\\\"item.status == 'completed'\\\" [routerLink]=\\\"['/admin/survey-report/report',item.id,item.user_id,tableTitle]\\\">{{item.survey.name}}</a>\\r\\n                                    <a *ngIf=\\\"item.status == 'pending'\\\">{{item.survey.name}}</a>\\r\\n                                </td>\\r\\n                                <td>{{item.updated_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                <td *ngIf=\\\"item.status == 'pending'\\\"><span class=\\\"badge badge-danger\\\">Pending</span></td>\\r\\n                                <td *ngIf=\\\"item.status == 'completed'\\\"><span class=\\\"badge badge-success\\\">Completed</span>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"tableTitle == 'Emergency Messages' || tableTitle == 'Survey Messages'\\\">\\r\\n                    <table class=\\\"table table-bordered text-center\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Created At</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Message</th>\\r\\n                                <th>Send By</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of tableRecords; let j=index\\\">\\r\\n                                <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                <td>{{item.title}}</td>\\r\\n                                <td>{{item.message}}</td>\\r\\n                                <td>{{item.send_by.name}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-spinner></ngx-spinner>\"","export default \"<div class=\\\"container-fluid\\\" *ngIf=\\\"surveys\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n            <div class=\\\"card shadow mb-4\\\">\\r\\n                <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Survey Report</h6>\\r\\n                    <button (click)=\\\"printWindow()\\\" class=\\\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\\\">Print</button>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" id=\\\"print-div\\\" *ngIf=\\\"surveys\\\">\\r\\n                    <h5><strong>Name: </strong> {{submittedSurvey.user.name}}</h5>\\r\\n                    <!-- <h5 *ngIf=\\\"result\\\"><strong>Result: </strong> <span class=\\\"badge badge-success\\\">Clear</span></h5>\\r\\n                    <h5 *ngIf=\\\"!result\\\"><strong>Result: </strong> <span class=\\\"badge badge-danger'\\\">Not Clear</span></h5> -->\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-sm-6\\\">\\r\\n                            <strong>{{submittedSurvey.user.email}}</strong><br>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-sm-6 text-right\\\">\\r\\n                            <p class=\\\"mb-0\\\"><strong>Survey Name: </strong> {{submittedSurvey.survey.name}}</p>\\r\\n                            <p class=\\\"mb-0\\\" *ngIf=\\\"submittedSurvey.status == 'completed'\\\"><strong>Survey Status: </strong> <span class=\\\"badge badge-success\\\">{{submittedSurvey.status}}</span></p>\\r\\n                            <p class=\\\"mb-0\\\" *ngIf=\\\"submittedSurvey.status == 'pending'\\\"><strong>Survey Status: </strong> <span class=\\\"badge badge-danger\\\" *ngIf=\\\"submittedSurvey.status == 'pending'\\\">{{submittedSurvey.status}}</span></p>\\r\\n                            <p class=\\\"mb-0\\\"><strong>Submission Date: </strong> {{submittedSurvey.updated_at | date: 'MM/dd/yyyy'}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <table class=\\\"table table-bordered text-center table-responsive\\\" width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>#</th>\\r\\n                                <th>Question</th>\\r\\n                                <th>Employee's Answer</th>\\r\\n                                <th>Expected Answer</th>\\r\\n                                <th>Result</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of surveys; let j=index\\\">\\r\\n                                <td>{{j + 1}}</td>\\r\\n                                <td>{{item.questions.question}}</td>\\r\\n                                <td> {{item.answer}}</td>\\r\\n                                <td>{{item.questions.expected_ans}}\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div *ngIf=\\\"matchAnswers(j) == false\\\">\\r\\n                                        <span class=\\\"badge badge-danger\\\">Wrong</span>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"matchAnswers(j) == true\\\">\\r\\n                                        <span class=\\\"badge badge-success\\\">Correct</span>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-spinner></ngx-spinner>\"","export default \"<div class=\\\"container-fluid\\\" *ngIf=\\\"userName\\\">\\r\\n\\r\\n    <!-- Page Heading -->\\r\\n\\r\\n    <div class=\\\"d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n        <h1 class=\\\"h2 mb-0 text-gray-800 text-uppercase text-dark\\\">{{userName}}</h1>\\r\\n        <h1 class=\\\"h2 mb-0 text-gray-800 text-uppercase text-success\\\">{{userType}}</h1>\\r\\n    </div>\\r\\n    <!-- <h4 style=\\\"text-transform: capitalize;\\\">Welcome {{Auth::user()->f_name}} {{Auth::user()->l_name}} ! {{Auth::user()->user_type}}</h4> -->\\r\\n    <!-- Content Row -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\" *ngIf=\\\"userType=='director'\\\">\\r\\n            <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Managers')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-success text-uppercase mb-1\\\">Managers</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{supervisers.managers.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\" *ngIf=\\\"userType=='director' || userType=='manager'\\\">\\r\\n            <div class=\\\"card border-left-success shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Supervisor')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-success text-uppercase mb-1\\\">Supervisors</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{supervisers.supervisors.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- Earnings (Monthly) Card Example -->\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-primary shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Employees')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-primary text-uppercase mb-1\\\">Employees</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{supervisers.employees.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- Earnings (Monthly) Card Example -->\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\">\\r\\n            <div class=\\\"card border-left-danger shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Emergency Notifications')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-danger text-uppercase mb-1\\\">Emergency Messages</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{supervisers.emergencyMsg.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-xl-3 col-md-6 mb-4\\\" *ngIf=\\\"userType!='director'\\\">\\r\\n            <div class=\\\"card border-left-warning shadow h-100 py-2\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" (click)=\\\"showTableContent('Survey Messages')\\\">\\r\\n                        <div class=\\\"row no-gutters align-items-center\\\">\\r\\n                            <div class=\\\"col mr-2\\\">\\r\\n                                <div class=\\\"text-l font-weight-bold text-warning text-uppercase mb-1\\\">Survey Messages</div>\\r\\n                                <div class=\\\"h3 mb-0 font-weight-bold text-gray-800\\\">{{supervisers.surveyMsg.length}}</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"tableRecords\\\">\\r\\n        <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n            <div class=\\\"card shadow mb-4\\\">\\r\\n                <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                    <h6 class=\\\"m-0 font-weight-bold text-primary\\\">{{tableTitle}}</h6>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"tableTitle == 'Managers' || tableTitle == 'Supervisor' || tableTitle == 'Employees'\\\">\\r\\n                    <table [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered text-center\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Created At</th>\\r\\n                                <th>Full Name</th>\\r\\n                                <th>Email</th>\\r\\n                                <th>Department</th>\\r\\n                                <th>Added By</th>\\r\\n\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of tableRecords; let j=index\\\">\\r\\n                                <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                <td>{{item.name}}</td>\\r\\n                                <td>\\r\\n                                    <a *ngIf=\\\"tableTitle == 'Managers'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"switchToManager(item.id)\\\"><b>{{item.email}}</b></a>\\r\\n                                    <a *ngIf=\\\"tableTitle == 'Supervisor'\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"switchToSuperviser(item.id)\\\"><b>{{item.email}}</b></a>\\r\\n                                    <a *ngIf=\\\"tableTitle == 'Employees'\\\" [routerLink]=\\\"['/admin/survey-report/employee-report-details',item.id]\\\"><b>{{item.email}}</b></a>\\r\\n                                </td>\\r\\n                                <td>{{item.department}}</td>\\r\\n                                <td>{{item.added.name}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"tableTitle == 'Emergency Notifications' || tableTitle == 'Survey Messages'\\\">\\r\\n                    <table [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered text-center\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Created At</th>\\r\\n                                <th>Title</th>\\r\\n                                <th>Message</th>\\r\\n                                <th>Send To</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of tableRecords; let j=index\\\">\\r\\n                                <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                <td>{{item.title}}</td>\\r\\n                                <td>{{item.message}}</td>\\r\\n                                <td>{{item.send_to.name}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<ngx-spinner></ngx-spinner>\"","export default \"<!-- Begin Page Content -->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin'\\\">\\r\\n            <a class=\\\"nav-link \\\" [ngClass]=\\\"{'active': userType == 'dev' || userType == 'admin'}\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Directors</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_managers == 'true'\\\">\\r\\n            <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active': userType == 'director'}\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Managers</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_supervisors == 'true'\\\">\\r\\n            <a class=\\\"nav-link \\\" [ngClass]=\\\"{'active': userType == 'manager'}\\\" id=\\\"super-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#superviser\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">Supervisors</a>\\r\\n        </li>\\r\\n\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_employees == 'true'\\\">\\r\\n            <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active': userType == 'superviser'}\\\" id=\\\"contact-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#contact\\\" role=\\\"tab\\\" aria-controls=\\\"contact\\\" aria-selected=\\\"false\\\">Employees</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_reports == 'true'\\\">\\r\\n            <a class=\\\"nav-link\\\" id=\\\"report-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#report\\\" role=\\\"tab\\\" aria-controls=\\\"report\\\" aria-selected=\\\"false\\\">Survey Reporting</a>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <!-- [ngClass]=\\\"{'active': userType == 'manager','show': userType == 'manager'}\\\" -->\\r\\n    <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\r\\n        <div *ngIf=\\\"userType == 'dev' || userType == 'admin'\\\" class=\\\"tab-pane fade show active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Directors</h6>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"onRefresh('director')\\\" title=\\\"Refresh\\\" class=\\\"btn btn-primary sm-icon marginButtonRight\\\"><i class=\\\"fa fa-retweet\\\"></i></a>\\r\\n                                <input style=\\\"width: auto;\\\" [(ngModel)]=\\\"filterDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" (change)=\\\"changeValues($event,'director')\\\"> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <table *ngIf=\\\"directors\\\" id=\\\"myTable\\\" class=\\\"table table-bordered text-center\\\" [dtOptions]=\\\"dtOptions\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Created At</th>\\r\\n                                        <th>Full Name</th>\\r\\n                                        <th>Email</th>\\r\\n                                        <th>Department</th>\\r\\n                                        <th>Added By</th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of directors; let j=index\\\">\\r\\n                                        <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                        <td>{{item.name}}</td>\\r\\n                                        <td><a [routerLink]=\\\"['report-details',item.id]\\\"><b>{{item.email}}</b></a></td>\\r\\n                                        <td>{{item.department}}</td>\\r\\n                                        <td>{{item.added.name}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [ngClass]=\\\"{'active': userType == 'manager','show': userType == 'manager'}\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_supervisors == 'true'\\\" class=\\\"tab-pane fade\\\" id=\\\"superviser\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"super-tab\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Supervisors</h6>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"onRefresh('superviser')\\\" title=\\\"Refresh\\\" class=\\\"btn btn-primary sm-icon marginButtonRight\\\"><i class=\\\"fa fa-retweet\\\"></i></a>\\r\\n                                <input style=\\\"width: auto;\\\" [(ngModel)]=\\\"filterDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" (change)=\\\"changeValues($event,'superviser')\\\"> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\" *ngIf=\\\"supervisors\\\">\\r\\n                            <table class=\\\"table table-bordered text-center\\\" [dtOptions]=\\\"dtOptions\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Created At</th>\\r\\n                                        <th>Full Name</th>\\r\\n                                        <th>Email</th>\\r\\n                                        <th>Department</th>\\r\\n                                        <th>Added By</th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of supervisors; let j=index\\\">\\r\\n                                        <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                        <td>{{item.name}}</td>\\r\\n                                        <td><a [routerLink]=\\\"['report-details',item.id]\\\"><b>{{item.email}}</b></a></td>\\r\\n                                        <td>{{item.department}}</td>\\r\\n                                        <td>{{item.added.name}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [ngClass]=\\\"{'active': userType == 'director','show': userType == 'director'}\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_managers == 'true'\\\" class=\\\"tab-pane fade\\\" id=\\\"profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Managers</h6>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"onRefresh('manager')\\\" title=\\\"Refresh\\\" class=\\\"btn btn-primary sm-icon marginButtonRight\\\"><i class=\\\"fa fa-retweet\\\"></i></a>\\r\\n                                <input style=\\\"width: auto;\\\" [(ngModel)]=\\\"filterDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" (change)=\\\"changeValues($event,'manager')\\\"> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\" *ngIf=\\\"managers\\\">\\r\\n                            <table class=\\\"table table-bordered text-center\\\" [dtOptions]=\\\"dtOptions\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Created At</th>\\r\\n                                        <th>Full Name</th>\\r\\n                                        <th>Email</th>\\r\\n                                        <th>Department</th>\\r\\n                                        <th>Added By</th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of managers; let j=index\\\">\\r\\n                                        <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                        <td>{{item.name}}</td>\\r\\n                                        <td><a [routerLink]=\\\"['report-details',item.id]\\\"><b>{{item.email}}</b></a></td>\\r\\n                                        <td>{{item.department}}</td>\\r\\n                                        <td>{{item.added.name}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [ngClass]=\\\"{'active': userType == 'superviser','show': userType == 'superviser'}\\\" *ngIf=\\\"userType == 'dev' || userType == 'admin' || userProfile?.manage_employees == 'true'\\\" class=\\\"tab-pane fade\\\" id=\\\"contact\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"contact-tab\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xl-12 col-md-12 mb-4\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Employees</h6>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"onRefresh('employee')\\\" title=\\\"Refresh\\\" class=\\\"btn btn-primary sm-icon marginButtonRight\\\"><i class=\\\"fa fa-retweet\\\"></i></a>\\r\\n                                <input style=\\\"width: auto;\\\" [(ngModel)]=\\\"filterDate\\\" type=\\\"date\\\" class=\\\"form-control\\\" (change)=\\\"changeValues($event,'employee')\\\"> -->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\" *ngIf=\\\"employees\\\">\\r\\n                            <table class=\\\"table table-bordered text-center\\\" [dtOptions]=\\\"dtOptions\\\" datatable width=\\\"100%\\\" cellspacing=\\\"0\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Created At</th>\\r\\n                                        <th>Full Name</th>\\r\\n                                        <th>Email</th>\\r\\n                                        <th>Department</th>\\r\\n\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of employees; let j=index\\\">\\r\\n                                        <td>{{item.created_at | date: 'MM/dd/yyyy'}}</td>\\r\\n                                        <td>{{item.name}}</td>\\r\\n                                        <td><a [routerLink]=\\\"['employee-report-details',item.id]\\\"><b>{{item.email}}</b></a></td>\\r\\n                                        <td>{{item.department}}</td>\\r\\n                                    </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"userType == 'dev' || userType == 'admin'  || userProfile?.manage_reports == 'true'\\\" class=\\\"tab-pane fade\\\" id=\\\"report\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"report-tab\\\">\\r\\n            <div class=\\\"p-2\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card shadow mb-4\\\">\\r\\n                        <div class=\\\"card-header  py-3 d-sm-flex align-items-center justify-content-between mb-4\\\">\\r\\n                            <h6 class=\\\"m-0 font-weight-bold text-primary\\\">Report Filters</h6>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <form>\\r\\n                                <div class=\\\"form-row mb-2\\\">\\r\\n                                    <div class=\\\"col-4 mb-2\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <label>Role*</label>\\r\\n                                            <select class=\\\"form-control\\\" [formControl]=\\\"RoleControl\\\">\\r\\n                                                <option *ngFor=\\\"let item of Roles\\\" value=\\\"{{item.value}}\\\">\\r\\n                                                    {{item.name}}\\r\\n                                                </option>\\r\\n                                            </select>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-4 mb-2\\\">\\r\\n                                        <label>Department</label>\\r\\n                                        <select *ngIf=\\\"userType !='manager' && userType !='superviser'\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"selectedDepartment\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"changeDepartment($event)\\\">\\r\\n                                                <option *ngFor=\\\"let item of departments\\\" value=\\\"{{item.value}}\\\">{{item.department}}</option>\\r\\n                                            </select>\\r\\n                                            <select *ngIf=\\\"userType =='manager' || userType =='superviser'\\\"  class=\\\"form-control\\\" [(ngModel)]=\\\"selectedDepartment\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"changeDepartment($event)\\\">\\r\\n                                                <option value=\\\"{{department}}\\\">Select Department</option>\\r\\n                                                <option value=\\\"{{department}}\\\">{{department}}</option>\\r\\n                                            </select>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-4 mb-2\\\">\\r\\n                                        <mat-form-field>\\r\\n                                            <label>Employee</label>\\r\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Choose Employee\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"employeeControl\\\" [matAutocomplete]=\\\"autos\\\">\\r\\n                                            <mat-autocomplete #autos=\\\"matAutocomplete\\\">\\r\\n                                                <mat-option *ngFor=\\\"let option of employeefilteredOptions | async\\\" [value]=\\\"option\\\">\\r\\n                                                    {{option}}\\r\\n                                                </mat-option>\\r\\n                                            </mat-autocomplete>\\r\\n                                        </mat-form-field>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-6\\\">\\r\\n                                        <label>From Date</label>\\r\\n                                        <input class=\\\"form-control\\\" type=\\\"date\\\" placeholder=\\\"Choose Date\\\" [formControl]=\\\"dateControl\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-6\\\">\\r\\n                                        <label>To Date</label>\\r\\n                                        <input class=\\\"form-control\\\" type=\\\"date\\\" placeholder=\\\"Choose Date\\\" [formControl]=\\\"enddateControl\\\">\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-6\\\">\\r\\n                                        <button (click)=\\\"getReportsData('login')\\\" class=\\\"btn btn-primary mb-2 btn-block\\\">Get Login Survey Report</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-6\\\">\\r\\n                                        <button (click)=\\\"getReportsData1('other')\\\" [disabled]=\\\"selectedDepartment == '' || employeeControl.value == ''\\\" class=\\\"btn btn-primary mb-2 btn-block\\\">Get Other Survey Report</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- /.container-fluid -->\\r\\n<ngx-spinner></ngx-spinner>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3N1cnZleS1yZXBvcnRzL2VlbXBsb3llZXJlcG9ydGRldGFpbC9lZW1wbG95ZWVyZXBvcnRkZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-eemployeereportdetail',\r\n  templateUrl: './eemployeereportdetail.component.html',\r\n  styleUrls: ['./eemployeereportdetail.component.css']\r\n})\r\nexport class EemployeereportdetailComponent implements OnInit {\r\n  userType = null;\r\n  userName: any;\r\n  tableTitle = null;\r\n  tableRecords: any = [];\r\n  emergency =  [];\r\n  survey = [];\r\n  submitLogin = [];\r\n  submitOther = [];\r\n  constructor(\r\n    private toast: ToastrService,\r\n    public spinner: NgxSpinnerService,\r\n    public api: ApiService,\r\n    private auth: AuthService,\r\n    public active: ActivatedRoute\r\n  ) {\r\n    this.active.params.subscribe((data: any) => {\r\n      this.getDetailById(data.id);\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  getDetailById(id) {\r\n    this.spinner.show();\r\n    this.api.get('getUserDetailById/'+id).subscribe((data) => {\r\n      this.spinner.hide();\r\n      this.userType = data.data.user_type;\r\n      this.userName = data.data.name;\r\n      this.submitLogin = data.data.survey_submitted;\r\n      this.submitOther = data.data.other_survey_submitted;\r\n      this.emergency = data.data.emergency_msg_employee;\r\n      this.survey = data.data.survey_msg_employee;\r\n    })\r\n  }\r\n  showTableContent(type) {\r\n    this.tableRecords = null;\r\n    this.tableTitle = type;\r\n    if(type == 'Emergency Messages') {\r\n      this.tableRecords = this.emergency;\r\n    } else if(type == 'Survey Messages') {\r\n      this.tableRecords = this.survey;\r\n    } else if(type == 'Login Surveys') {\r\n      this.tableRecords = this.submitLogin;\r\n    } else if(type == 'Other Surveys') {\r\n      this.tableRecords = this.submitOther;\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3N1cnZleS1yZXBvcnRzL2dlbmVyYXRlLXJlcG9ydC9nZW5lcmF0ZS1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { ApiService } from './../../../../services/api.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { truncateSync } from 'fs';\r\n\r\n@Component({\r\n  selector: 'app-generate-report',\r\n  templateUrl: './generate-report.component.html',\r\n  styleUrls: ['./generate-report.component.css']\r\n})\r\nexport class GenerateReportComponent implements OnInit {\r\n\r\n  surveys: any;\r\n  questions: any = [];\r\n  dtOptions = {};\r\n  result = false;\r\n  submittedSurvey: any;\r\n  constructor(\r\n    private toast: ToastrService,\r\n    public spinner: NgxSpinnerService,\r\n    public api: ApiService,\r\n    public active: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.result = true;\r\n    this.dtOptions = {\r\n      order: [0, 'asc'],\r\n      pageLength: 50\r\n    };\r\n    this.active.params.subscribe((data: any) => {\r\n      if (data.type == 'Other Surveys') {\r\n        this.getOtherSurveys(data.id,data.user);\r\n      } else {\r\n        this.getSurveys(data.id,data.user);\r\n      }\r\n    })\r\n  }\r\n  getSurveys(id,user) {\r\n    this.surveys = null;\r\n    this.submittedSurvey = null;\r\n    this.spinner.show();\r\n    this.api.get('submittedLoginSurveysDetails/'+id+'/'+user).subscribe((data) => {\r\n      this.spinner.hide();\r\n      if (!data.error) {\r\n        this.surveys = data.surveys;\r\n        this.submittedSurvey = data.submittedSurvey;\r\n      }\r\n    })\r\n  }\r\n  getOtherSurveys(id,user) {\r\n    this.surveys = null;\r\n    this.spinner.show();\r\n    this.api.get('submittedOtherSurveysDetails/'+id+'/'+user).subscribe((data) => {\r\n      this.spinner.hide();\r\n      if (!data.error) {\r\n        this.surveys = data.surveys;\r\n        this.questions = data.surveys.survey.question;\r\n        console.log(this.questions)\r\n      }\r\n    })\r\n  }\r\n  printWindow() {\r\n    var printContents = document.getElementById('print-div').innerHTML;\r\n\t\t\tvar originalContents = document.body.innerHTML;\r\n\t\t\tdocument.body.innerHTML = printContents;\r\n\t\t\twindow.print();\r\n\t\t\tdocument.body.innerHTML = originalContents;\r\n  }\r\n  matchAnswers(q_index) {\r\n      const surveyAnswer = this.surveys[q_index].answer;\r\n      const expectedAnswer = this.surveys[q_index].questions.expected_ans;\r\n      if (surveyAnswer == expectedAnswer) {\r\n        return true;\r\n      } else {\r\n        this.result = false;\r\n        return false;\r\n      }\r\n    }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL3N1cnZleS1yZXBvcnRzL3JlcG9ydGRldGFpbC9yZXBvcnRkZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { AuthService } from 'src/app/shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reportdetail',\r\n  templateUrl: './reportdetail.component.html',\r\n  styleUrls: ['./reportdetail.component.css']\r\n})\r\nexport class ReportdetailComponent implements OnInit {\r\n\r\n  userType = null;\r\n  userName: any;\r\n  tableTitle = null;\r\n  tableRecords: any = [];\r\n  supervisers = {\r\n    supervisors: [],\r\n    managers: [],\r\n    employees: [],\r\n    emergencyMsg: [],\r\n    surveyMsg: []\r\n  };\r\n  dtOptions: { };\r\n  constructor(\r\n    private toast: ToastrService,\r\n    public spinner: NgxSpinnerService,\r\n    public api: ApiService,\r\n    private auth: AuthService,\r\n    public active: ActivatedRoute\r\n  ) { \r\n    this.active.params.subscribe((data: any) => {\r\n      this.getDetailById(data.id);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dtOptions = {\r\n      order: [0, 'desc'],\r\n      dom: 'Bfrtip',\r\n        buttons: [\r\n          'pageLength','copy', 'csv', 'excel', 'print',\r\n        ],\r\n        select: true\r\n    };\r\n  }\r\n  getDetailById(id) {\r\n    this.spinner.show();\r\n    this.api.get('getUserDetailById/'+id).subscribe((data) => {\r\n      this.spinner.hide();\r\n      this.userType = data.data.user_type;\r\n      this.userName = data.data.name;\r\n      if(this.userType == 'director') {\r\n        this.supervisers.managers = data.data.department_manager;\r\n        this.supervisers.supervisors = data.data.department_superviser;\r\n        this.supervisers.employees = data.data.department_employees;\r\n        this.supervisers.emergencyMsg = data.data.emergency_msg;\r\n        this.supervisers.surveyMsg = data.data.survey_msg;\r\n      } else if(this.userType == 'manager') {\r\n        this.supervisers.employees = data.data.department_employees;\r\n        this.supervisers.supervisors = data.data.department_superviser;\r\n        this.supervisers.emergencyMsg = data.data.emergency_msg;\r\n        this.supervisers.surveyMsg = data.data.survey_msg;\r\n      } else {\r\n        this.supervisers.employees = data.data.manager_employees;\r\n        this.supervisers.emergencyMsg = data.data.emergency_msg;\r\n        this.supervisers.surveyMsg = data.data.survey_msg;\r\n      }\r\n    })\r\n  }\r\n  showTableContent(type) {\r\n    this.tableRecords = null;\r\n    this.tableTitle = type;\r\n    if(type == 'Managers') {\r\n      this.tableRecords = this.supervisers.managers;\r\n    } else if(type == 'Supervisor') {\r\n      this.tableRecords = this.supervisers.supervisors;\r\n    } else if(type == 'Employees') {\r\n      this.tableRecords = this.supervisers.employees;\r\n    } else if(type == 'Emergency Notifications') {\r\n      this.tableRecords = this.supervisers.emergencyMsg;\r\n    } else if(type == 'Survey Messages') {\r\n      this.tableRecords = this.supervisers.surveyMsg;\r\n    }\r\n  }\r\n  switchToManager(id) {\r\n    this.tableRecords = null;\r\n    this.getDetailById(id);\r\n  }\r\n  switchToSuperviser(id) {\r\n    this.tableRecords = null;\r\n    this.getDetailById(id);\r\n  }\r\n}\r\n","export default \".mystyle {\\r\\n    color: white !important;\\r\\n    background-color: #004F59 !important;\\r\\n}\\r\\n\\r\\n.dt-button-collection {\\r\\n    margin-top: -35px !important;\\r\\n    margin-left: 135px !important;\\r\\n}\\r\\n\\r\\n/* .dataTables_length {\\r\\n    margin-left: 4px !important;\\r\\n    float: right !important;\\r\\n}\\r\\n\\r\\n.dataTables_filter {\\r\\n    margin-top: -36px !important;\\r\\n} */\\r\\n\\r\\n.form-control {\\r\\n    text-transform: capitalize;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvc3VydmV5LXJlcG9ydHMvc3VydmV5LXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSw0QkFBNEI7SUFDNUIsNkJBQTZCO0FBQ2pDOztBQUdBOzs7Ozs7O0dBT0c7O0FBQ0g7SUFDSSwwQkFBMEI7QUFDOUIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9zdXJ2ZXktcmVwb3J0cy9zdXJ2ZXktcmVwb3J0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm15c3R5bGUge1xyXG4gICAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA0RjU5ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kdC1idXR0b24tY29sbGVjdGlvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAtMzVweCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEzNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG4vKiAuZGF0YVRhYmxlc19sZW5ndGgge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDRweCAhaW1wb3J0YW50O1xyXG4gICAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kYXRhVGFibGVzX2ZpbHRlciB7XHJcbiAgICBtYXJnaW4tdG9wOiAtMzZweCAhaW1wb3J0YW50O1xyXG59ICovXHJcbi5mb3JtLWNvbnRyb2wge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbn0iXX0= */\"","import { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ApiService } from './../../../services/api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/shared/auth.service';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport * as ExcelJS  from 'exceljs';\r\nimport {saveAs} from \"file-saver\";\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { exit } from 'process';\r\n@Component({\r\n  selector: 'app-survey-reports',\r\n  templateUrl: './survey-reports.component.html',\r\n  styleUrls: ['./survey-reports.component.css']\r\n})\r\nexport class SurveyReportsComponent implements OnInit {\r\n  surveys: any;\r\n  dtOptions = {};\r\n  surveysOther: any;\r\n  userType = this.auth.getCurrentUserType();\r\n  department = localStorage.getItem('department');\r\n  supervisors: any;\r\n  managers: any;\r\n  employees: any;\r\n  userProfile: any;\r\n  directors: any;\r\n  tempsupervisors: any;\r\n  tempmanagers: any;\r\n  tempemployees: any;\r\n  tempdirectors: any;\r\n  filterDate = null;\r\n  // Tab5 Filter\r\n  Roles = []\r\n  departments = [\r\n    {'value': 'All Departments', department: 'All Departments'}\r\n  ]\r\n  employeess = ['All Employees'];\r\n  departmentControl = new FormControl('');\r\n  dateControl = new FormControl('');\r\n  enddateControl = new FormControl('');\r\n  employeeControl = new FormControl('');\r\n  RoleControl = new FormControl('', Validators.required);\r\n  departmentfilteredOptions: Observable<string[]>;\r\n  employeefilteredOptions: Observable<string[]>;\r\n  selectedDepartment: any;\r\n\r\n  departmentsData: any = JSON.parse(localStorage.getItem('departments'));\r\n\r\n  constructor(\r\n    private toast: ToastrService,\r\n    public spinner: NgxSpinnerService,\r\n    public api: ApiService,\r\n    private auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if(this.userType == 'dev' || this.userType == 'admin') {\r\n      this.departmentsData.forEach(element => {\r\n        this.departments.push(element);\r\n      });\r\n      this.Roles.push(\r\n        {name: 'Directors', value: 'director'},\r\n        {name: 'Managers', value: 'manager'},\r\n        {name: 'Supervisors', value: 'superviser'},\r\n        {name: 'Employees', value: 'employee'}\r\n      )\r\n    } else if(this.userType == 'director') {\r\n      let data = JSON.parse(this.department);\r\n      data.forEach(element => {\r\n        this.departments.push({value: element, department: element});\r\n      });\r\n      this.Roles.push(\r\n        {name: 'Managers', value: 'manager'},\r\n        {name: 'Supervisors', value: 'superviser'},\r\n        {name: 'Employees', value: 'employee'}\r\n      )\r\n    } else {\r\n      this.selectedDepartment = this.department;\r\n      if(this.userType == 'manager') {\r\n        this.Roles.push(\r\n          {name: 'Supervisors', value: 'superviser'},\r\n          {name: 'Employees', value: 'employee'}\r\n        )\r\n      } else {\r\n        this.Roles.push(\r\n          {name: 'Employees', value: 'employee'}\r\n        )\r\n      }\r\n    }\r\n    this.dtOptions = {\r\n      order: [0, 'desc'],\r\n      processing: true,\r\n      paging: true,\r\n      dom: 'lBfrtip',\r\n      // dom: 'Bfrtip',\r\n      language: {\r\n        \"lengthMenu\": \"_MENU_\"\r\n      },\r\n      buttons: [\r\n        'copy', 'csv', 'excel', 'print'\r\n      ],\r\n        select: true\r\n    };\r\n    // this.getSurveys('all');\r\n    // this.getOtherSurveys('all');\r\n    this.getUserProfile()\r\n    this.getReportsUsers();\r\n  }\r\n  getUserProfile() {\r\n    this.auth.profileUser().subscribe(data => {\r\n      this.userProfile = data.user;\r\n    })\r\n  }\r\n  getReportsUsers() {\r\n    this.supervisors = null;\r\n    this.managers = null;\r\n    this.employees = null;\r\n    this.spinner.show();\r\n    this.api.get('getReportsUsers').subscribe((data) => {\r\n      this.spinner.hide();\r\n      if (!data.error) {\r\n        this.supervisors = data.data.supervisors;\r\n        this.directors = data.data.directors;\r\n        this.managers = data.data.managers;\r\n        this.employees = data.data.employees;\r\n        this.tempsupervisors = data.data.supervisors;\r\n        this.tempdirectors = data.data.directors;\r\n        this.tempmanagers = data.data.managers;\r\n        this.tempemployees = data.data.employees;\r\n      }\r\n    })\r\n  }\r\n  getSurveys(type) {\r\n    this.surveys = null;\r\n    this.spinner.show();\r\n    this.api.get('submittedLoginSurveys/'+type).subscribe((data) => {\r\n      this.spinner.hide();\r\n      if (!data.error) {\r\n        this.surveys = data.surveys;\r\n      }\r\n    })\r\n  }\r\n  getOtherSurveys(type) {\r\n    this.surveysOther = null;\r\n    this.spinner.show();\r\n    this.api.get('submittedOtherSurveys/'+type).subscribe((data) => {\r\n      this.spinner.hide();\r\n      if (!data.error) {\r\n        this.surveysOther = data.surveys;\r\n      }\r\n    })\r\n  }\r\n  changeValue(ev) {\r\n    this.getSurveys(ev);\r\n  }\r\n  dateChange(ev) {\r\n    this.getSurveys(ev)\r\n  }\r\n  changeValue1(ev) {\r\n    console.log(ev)\r\n    this.getOtherSurveys(ev);\r\n  }\r\n  dateChange1(ev) {\r\n    console.log(ev)\r\n    this.getOtherSurveys(ev)\r\n  }\r\n  changeValues(ev, type) {\r\n    this.directors = [];\r\n\r\n    $('#myTable').DataTable();\r\n\r\n    let tempArr = [];\r\n    if(type == 'director') {\r\n      this.directors = [];\r\n      console.log(this.directors);\r\n      // this.tempdirectors.filter((item) => {\r\n      //   if(item.created_at.substr(0,10) == ev.target.value) {\r\n      //     tempArr.push(item);\r\n      //   }\r\n      // })\r\n      // this.directors = tempArr;\r\n    } else if(type == 'manager') {\r\n      this.managers.filter((item) => {\r\n        if(item.created_at.substr(0,10) == ev.target.value) {\r\n          tempArr.push(item);\r\n        }\r\n      })\r\n      this.managers = null;\r\n      this.managers = tempArr;\r\n    } else if(type == 'superviser') {\r\n      this.supervisors.filter((item) => {\r\n        if(item.created_at.substr(0,10) == ev.target.value) {\r\n          tempArr.push(item);\r\n        }\r\n      })\r\n      this.supervisors = null;\r\n      this.supervisors = tempArr;\r\n    } else {\r\n      this.employees.filter((item) => {\r\n        if(item.created_at.substr(0,10) == ev.target.value) {\r\n          tempArr.push(item);\r\n        }\r\n      })\r\n      this.employees = null;\r\n      this.employees = tempArr;\r\n    }\r\n    \r\n  }\r\n  onRefresh(type) {\r\n    var table = $('#myTable').DataTable();\r\n    table.clear();\r\n    this.directors = this.tempdirectors\r\n\r\n    this.directors.forEach(element => {\r\n    table.row.add([element.created_at,element.name,element.email,1,1]);\r\n\r\n    });\r\n    table.draw();\r\n\r\n\r\n    console.log(this.tempdirectors);\r\n    this.filterDate = null;\r\n    if(type == 'director') {\r\n      this.directors = this.tempdirectors;\r\n    } else if(type == 'manager') {\r\n      this.managers = this.tempmanagers\r\n    } else if(type == 'superviser') {\r\n      this.supervisors = this.tempsupervisors\r\n    } else {\r\n      this.employees = this.tempemployees\r\n    }\r\n  }\r\n// Filters\r\nasync exportJsonToExcel(jsonData, check): Promise<void> {\r\n  // jsonData.data.forEach((element,index) => {\r\n\r\n  // });\r\n  const workbook = new ExcelJS.Workbook();\r\n  workbook.creator = 'Developer';\r\n  workbook.lastPrinted = new Date();\r\n  workbook.views = \r\n  [\r\n    {\r\n      x: 0, y: 0, width: 10000, height: 20000,\r\n      firstSheet: 0, activeTab: 0, visibility: 'visible'\r\n    }\r\n  ]\r\n  // new\r\n  // let sheet = workbook.addWorksheet('Reports', {\r\n  //   properties: {tabColor:{argb:'FFC0000'}},\r\n  //   pageSetup:{fitToPage: true, fitToHeight: 5, fitToWidth: 7},\r\n  // });\r\n  // let header_rows = ['Employee Name','Survey Name','Submitted at'];\r\n  // await jsonData.questions.forEach(element => {\r\n  //   header_rows.push(element.question)\r\n  // });\r\n  // let header = sheet.addRow(header_rows)\r\n  // header.fill = {\r\n  //   type: \"pattern\",\r\n  //   pattern: \"solid\",\r\n  //   fgColor: {argb: \"5b9bd5\"},\r\n  //   bgColor: {argb: \"FF000000\"}\r\n  //   };\r\n  //   header.border = {\r\n  //     right: {style:'thin', color: {argb:'000000'}}\r\n  //   };\r\n  // await jsonData.surveys.forEach(survey => {\r\n  //   if(survey.user != null) {\r\n  //     let inner_row = [];\r\n  //     inner_row = [survey.user.name, jsonData.survey.name,survey.updated_at];\r\n  //     jsonData.questions.forEach(element => {\r\n  //       let counter = 0;\r\n  //       let ans = '';\r\n  //       survey.empanswer.forEach(answer => {\r\n  //         if(element.id == answer.question_id) {\r\n  //           counter = 1;\r\n  //           ans = answer.answer\r\n  //         }\r\n  //       });\r\n  //       if(counter == 1) {\r\n  //         inner_row.push(ans)\r\n  //       } else {\r\n  //         inner_row.push(ans)\r\n  //       }\r\n  //     });\r\n  //     let rows = sheet.addRow(inner_row);\r\n  //     rows.fill = {\r\n  //       type: 'pattern',\r\n  //       pattern:'solid',\r\n  //       fgColor:{argb:'deeaf6'},\r\n  //       bgColor: {\r\n  //         argb: \"FF000000\"\r\n  //       }\r\n  //     };\r\n  //     rows.border = {\r\n  //       top: {style:'thin', color: {argb:'000000'}},\r\n  //       right: {style:'thin', color: {argb:'000000'}}\r\n  //     };\r\n  //   } \r\n      \r\n  // })\r\n  // old\r\n  await jsonData.data.forEach(async element => {\r\n    const sheet = workbook.addWorksheet(element.date, {\r\n      properties: {tabColor:{argb:'FFC0000'}},\r\n      pageSetup:{fitToPage: true, fitToHeight: 5, fitToWidth: 7},\r\n    });\r\n    let columns_array = [];\r\n    columns_array = [\r\n      'Emplyee Name',\r\n      'Survey Name',\r\n      'Submitted At'\r\n    ]\r\n    await element.questions.forEach(question => {\r\n      columns_array.push(question.question)\r\n    });\r\n    let header = sheet.addRow(columns_array)\r\n    header.fill = {\r\n      type: \"pattern\",\r\n      pattern: \"solid\",\r\n      fgColor: {argb: \"5b9bd5\"},\r\n      bgColor: {argb: \"FF000000\"}\r\n      };\r\n      header.border = {\r\n        right: {style:'thin', color: {argb:'000000'}}\r\n      };\r\n      if(element.surveys.length == 0) {\r\n        let inner_row = [];\r\n        inner_row = ['', '','','No Survey Found'];\r\n        sheet.addRow(inner_row);\r\n      } else {\r\n        await element.surveys.forEach(survey => {\r\n            if(survey.user != null) {\r\n              let inner_row = [];\r\n              inner_row = [survey.user.name, jsonData.survey.name,survey.updated_at];\r\n              element.questions.forEach(q => {\r\n                let counter = 0;\r\n                let ans = '';\r\n                survey.empanswer.forEach(answer => {\r\n                  if(q.id == answer.question_id) {\r\n                    counter = 1;\r\n                    ans = answer.answer\r\n                  }\r\n                });\r\n                if(counter == 1) {\r\n                  inner_row.push(ans)\r\n                } else {\r\n                  inner_row.push(ans)\r\n                }\r\n              });\r\n              let rows = sheet.addRow(inner_row);\r\n              rows.fill = {\r\n                type: 'pattern',\r\n                pattern:'solid',\r\n                fgColor:{argb:'deeaf6'},\r\n                bgColor: {\r\n                  argb: \"FF000000\"\r\n                }\r\n              };\r\n              rows.border = {\r\n                top: {style:'thin', color: {argb:'000000'}},\r\n                right: {style:'thin', color: {argb:'000000'}}\r\n              };\r\n            } \r\n          });\r\n      }\r\n    // let countRow = 0;\r\n    // let Arraylength = 0;\r\n    //   if(check == 'login') {\r\n    //     Arraylength = employee.report_survey_submitted.length\r\n    //   } else {\r\n    //     Arraylength = employee.report_other_survey_submitted.length\r\n    //   }\r\n    // if(Arraylength == 0) {\r\n    //   sheet.getCell('D1').value = 'No Survey Found'\r\n    //   sheet.getRow(2).values = [];\r\n    // } else {\r\n    //   let employeeArray = [];\r\n    //   if(check == 'login') {\r\n    //     employeeArray = employee.report_survey_submitted;\r\n    //   } else {\r\n    //     employeeArray = employee.report_other_survey_submitted;\r\n    //   }\r\n    //   employeeArray.forEach(survey => {\r\n    //     countRow++;\r\n    //     let row;\r\n    //     row = sheet.getRow(countRow);\r\n    //     row.getCell(3).value = survey.updated_at;\r\n    //     row.getCell(3).fill = {\r\n    //       type: 'gradient',\r\n    //       gradient: 'angle',\r\n    //       degree: 0,\r\n    //       stops: [\r\n    //           {position:0, color:{argb:'35d600a1'}},\r\n    //           {position:0.5, color:{argb:'35d600a1'}},\r\n    //           {position:1, color:{argb:'35d600a1'}}\r\n    //       ]\r\n    //   };       \r\n    //     sheet.getRow(countRow).font = {bold: true};\r\n\r\n    //     countRow++;\r\n    //     sheet.addRow(['Question', 'Survey Name', 'Expected Answers', 'Employee Answers', 'Submitted At']);\r\n    //     sheet.getRow(countRow).font = {bold: true};\r\n\r\n    //     survey.empanswer.forEach((q, index)=> {\r\n    //       countRow++;\r\n    //       sheet.addRow([q.questions.question, survey.survey.name, q.questions.expected_ans,q.answer, survey.updated_at]);\r\n    //     }); \r\n    //   });\r\n    // }\r\n  });\r\n    const buffer = await workbook.xlsx.writeBuffer();\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    const fileExtension = '.xlsx';\r\n    const blob = new Blob([buffer], {type: fileType});\r\n    saveAs(blob, 'Survey Reports('+ new Date()+')'  + fileExtension);\r\n}\r\n\r\n\r\n\r\nprivate getEmployees() {\r\n  this.employeefilteredOptions = this.employeeControl.valueChanges\r\n  .pipe(\r\n    startWith(''),\r\n    map(value => this._filterEmployees(value))\r\n  );\r\n}\r\nprivate _filterEmployees(value: string): string[] {\r\n  const filterValue = value.toLowerCase();\r\n  return this.employeess.filter(option => option.toLowerCase().includes(filterValue));\r\n}\r\nchangeDepartment(ev) {\r\n  console.log(ev)\r\n  this.employeess = ['All Employees'];\r\n\r\n  this.spinner.show();\r\n  const params = {\r\n    department: this.selectedDepartment,\r\n    role: this.RoleControl.value,\r\n    type: 'departments'\r\n  }\r\n  this.api.post('filterReportData', params).subscribe((res) => {\r\n    this.spinner.hide()\r\n    res.data.forEach(element => {\r\n      this.employeess.push(element.name)\r\n    });\r\n    this.getEmployees();\r\n  })\r\n}\r\ngetReportsData(Surveytype) {\r\n  if(this.dateControl.value == '') {\r\n    this.toast.warning('Please Select Start Date')\r\n  } else if(this.enddateControl.value == '') {\r\n    this.toast.warning('Please Select end Date')\r\n  } else {\r\n    this.spinner.show();\r\n    const params = {\r\n      department: this.selectedDepartment,\r\n      date: this.dateControl.value,\r\n      enddate: this.enddateControl.value,\r\n      employee: this.employeeControl.value,\r\n      type: 'data',\r\n      role: this.RoleControl.value,\r\n      surveyType: Surveytype\r\n    }\r\n    this.api.post('filterReportData', params).subscribe((res: any) => {\r\n      this.spinner.hide();\r\n      this.exportJsonToExcel(res, Surveytype)\r\n      this.dateControl = new FormControl('');\r\n      this.enddateControl = new FormControl('');\r\n      this.employeeControl = new FormControl('');\r\n    },(error => {\r\n      this.spinner.hide();\r\n    }))\r\n  }\r\n  \r\n}\r\nasync exportJsonToExcel1(jsonData, check): Promise<void> {\r\n  const workbook = new ExcelJS.Workbook();\r\n  workbook.creator = 'Developer';\r\n  workbook.lastPrinted = new Date();\r\n  workbook.views = \r\n  [\r\n    {\r\n      x: 0, y: 0, width: 10000, height: 20000,\r\n      firstSheet: 0, activeTab: 0, visibility: 'visible'\r\n    }\r\n  ]\r\n  \r\n  await jsonData.forEach(employee => {\r\n    const sheet = workbook.addWorksheet(employee.name, {\r\n            properties: {tabColor:{argb:'FFC0000'}},\r\n            pageSetup:{fitToPage: true, fitToHeight: 5, fitToWidth: 7},\r\n          });\r\n    sheet.columns = [\r\n      { key: 'Question',width: 30},\r\n      { key: 'Survey Name',width: 30},\r\n      { key: 'Expected Answers',width: 30},\r\n      { key: 'Employee Answers',width: 30},\r\n      { key: 'Submitted At',width: 30}\r\n      ]\r\n    let countRow = 0;\r\n    let Arraylength = 0;\r\n    Arraylength = employee.report_other_survey_submitted.length\r\n    if(Arraylength == 0) {\r\n      sheet.getCell('D1').value = 'No Survey Found'\r\n      sheet.getRow(2).values = [];\r\n    } else {\r\n      let employeeArray = [];\r\n      employeeArray = employee.report_other_survey_submitted;\r\n      employeeArray.forEach(survey => {\r\n        countRow++;\r\n        let row;\r\n        row = sheet.getRow(countRow);\r\n        row.getCell(3).value = survey.updated_at;\r\n        row.getCell(3).fill = {\r\n          type: 'gradient',\r\n          gradient: 'angle',\r\n          degree: 0,\r\n          stops: [\r\n              {position:0, color:{argb:'35d600a1'}},\r\n              {position:0.5, color:{argb:'35d600a1'}},\r\n              {position:1, color:{argb:'35d600a1'}}\r\n          ]\r\n      };       \r\n        sheet.getRow(countRow).font = {bold: true};\r\n\r\n        countRow++;\r\n        sheet.addRow(['Question', 'Survey Name', 'Expected Answers', 'Employee Answers', 'Submitted At']);\r\n        sheet.getRow(countRow).font = {bold: true};\r\n\r\n        survey.survey.other_questions.forEach((q, index) => {\r\n          countRow++;\r\n          let answer = '';\r\n          answer = survey.empanswer[index].answer;\r\n          sheet.addRow([q.question, survey.survey.name, q.expected_ans,answer, survey.updated_at]);\r\n        }); \r\n      });\r\n    }\r\n  });\r\n    const buffer = await workbook.xlsx.writeBuffer();\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\r\n    const fileExtension = '.xlsx';\r\n    const blob = new Blob([buffer], {type: fileType});\r\n    saveAs(blob, 'Survey Reports('+ new Date()+')'  + fileExtension);\r\n}\r\ngetReportsData1(Surveytype) {\r\n  if(this.dateControl.value == '' && this.enddateControl.value != '') {\r\n    this.toast.warning('Please Select Start Date')\r\n  } else if(this.dateControl.value != '' && this.enddateControl.value == '') {\r\n    this.toast.warning('Please Select end Date')\r\n  } else {\r\n    this.spinner.show();\r\n    const params = {\r\n      department: this.selectedDepartment,\r\n      date: this.dateControl.value,\r\n      enddate: this.enddateControl.value,\r\n      employee: this.employeeControl.value,\r\n      type: 'data',\r\n      role: this.RoleControl.value,\r\n      surveyType: Surveytype\r\n    }\r\n    this.api.post('filterReportDataOtherSurvey', params).subscribe((res: any) => {\r\n      this.spinner.hide();\r\n      console.log(res);\r\n      this.exportJsonToExcel1(res.data, Surveytype)\r\n      this.dateControl = new FormControl('');\r\n      this.enddateControl = new FormControl('');\r\n      this.employeeControl = new FormControl('');\r\n    })\r\n  }\r\n  \r\n}\r\n}\r\n","import { DataTablesModule } from 'angular-datatables';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SurveyReportsComponent } from './survey-reports.component';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { GenerateReportComponent } from './generate-report/generate-report.component';\r\nimport { ReportdetailComponent } from './reportdetail/reportdetail.component';\r\nimport { EemployeereportdetailComponent } from './eemployeereportdetail/eemployeereportdetail.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SurveyReportsComponent,\r\n  },\r\n  {\r\n    path: 'report-details/:id',\r\n    component: ReportdetailComponent,\r\n  },\r\n  {\r\n    path: 'employee-report-details/:id',\r\n    component: EemployeereportdetailComponent,\r\n  },\r\n  {\r\n    path: 'report/:id/:user/:type',\r\n    component: GenerateReportComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SurveyReportsComponent,\r\n  GenerateReportComponent,\r\n  ReportdetailComponent,\r\n  EemployeereportdetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NgxSpinnerModule,\r\n    DataTablesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class SurveyReportsModule { }\r\n"],"sourceRoot":"webpack:///"}